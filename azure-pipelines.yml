# Node.js

# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

#TODO: remove this so it triggers on all branches
trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

strategy:
  matrix:
      set_path:
        path_1: PATH=$TRAVIS_BUILD_DIR/pandoc:$PATH
      set_to_notebook:
        env_1: GROUP=js/notebook
        env_2: GROUP=python
        env_3: GROUP=js/base
        env_4: GROUP=js/services

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.6'
    addToPath: true
    architecture: 'x64'

- script: |
      pip install --upgrade pip
      pip install --upgrade setuptools wheel nose coverage codecov
      nvm install 6.9.2
      nvm use 6.9.2
      node --version
      npm --version
      npm upgrade -g npm
      npm install
      git clone git://github.com/n1k0/casperjs.git
      cd casperjs
      sudo ln -sf `pwd`/bin/casperjs /usr/local/bin/casperjs
      echo 'casperjs and phantomjs installed'
      
      sudo apt-get install libc6 libstdc++6 libgcc1 libgtk2.0-0 libasound2 libxrender1
      sudo apt-get install xvfb
      apt-get install firefox
      cd ~
      export SLIMER_JS="slimerjs-0.10.3"
      wget http://download.slimerjs.org/releases/latest-slimerjs-stable/$SLIMER_JS.tar.bz2
      sudo tar xvjf $SLIMER_JS.tar.bz2
      sudo mv $SLIMER_JS /usr/local/share
      sudo ln -sf /usr/local/share/$SLIMER_JS/slimerjs /usr/local/bin
      export SLIMERJSLAUNCHER=/usr/bin/firefox

      pip install -r docs/doc-requirements.txt
      pip install --upgrade pytest
      pip install --upgrade selenium pytest
      wget https://github.com/mozilla/geckodriver/releases/download/v0.19.1/geckodriver-v0.19.1-linux64.tar.gz
      mkdir geckodriver
      tar -xzf geckodriver-v0.19.1-linux64.tar.gz -C geckodriver
      export PATH=$PATH:$PWD/geckodriver
      npm install sqlite3
      pip install "attrs>=17.4.0"
  displayName: 'Before Install'
  continueOnError: false

- script: |
      pip install --pre .[test] $EXTRA_PIP
      pip freeze
      wget https://github.com/jgm/pandoc/releases/download/1.19.1/pandoc-1.19.1-1-amd64.deb
      sudo dpkg -i pandoc-1.19.1-1-amd64.deb
  displayName: 'Install'
  continueOnError: false

# Run Tests
- script: |
      jupyter kernelspec list
      symlinks=$(find . -type l| grep -v './node_modules/' | grep -v './git-hooks')
      if [[ $(echo $symlinks) ]]; then
          echo "Repository contains symlinks which won't work on windows:"
          echo $symlinks
          echo ""
          false
      else
          true
      fi
      python -m notebook.jstest js/notebook
      python -m notebook.jstest python
      python -m notebook.jstest js/base
      python -m notebook.jstest js/services

      # nosetests -v --exclude-dir notebook/tests/selenium --with-coverage --cover-package=notebook notebook
      # py.test -sv notebook/tests/selenium
      # |
      # if [[ $GROUP == docs ]]; then
      #   EXIT_STATUS=0
      #   make -C docs/ html || EXIT_STATUS=$?
      #   if [[ $TRAVIS_EVENT_TYPE == cron ]]; then
      #     make -C docs/ linkcheck || EXIT_STATUS=$?;
      #   fi
      #   pytest --nbval --current-env docs || EXIT_STATUS=$?
      #   exit $EXIT_STATUS
      # fi
  displayName: 'Run Tests'
  continueOnError: false
